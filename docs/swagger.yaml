definitions:
  models.Customer:
    properties:
      address:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      updated_at:
        type: string
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      customer_id:
        type: integer
      id:
        type: integer
      order_date:
        type: string
      product_name:
        type: string
      status:
        type: string
      total:
        type: number
      updated_at:
        type: string
    type: object
  models.User:
    type: object
info:
  contact: {}
paths:
  /customer:
    post:
      consumes:
      - application/json
      description: Menambahkan customer baru ke dalam database
      parameters:
      - description: Customer Data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Customer'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Membuat customer baru
      tags:
      - customer
  /customer/{id}:
    delete:
      consumes:
      - application/json
      description: Menghapus customer berdasarkan ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Customer berhasil dihapus
          schema:
            type: string
        "404":
          description: Customer not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Menghapus data customer
      tags:
      - customer
    get:
      consumes:
      - application/json
      description: Mengambil informasi customer berdasarkan ID
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "404":
          description: Customer not found
          schema:
            type: string
      summary: Mendapatkan detail customer
      tags:
      - customer
    put:
      consumes:
      - application/json
      description: Memperbarui informasi customer yang sudah ada
      parameters:
      - description: Customer ID
        in: path
        name: id
        required: true
        type: integer
      - description: Customer Data
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.Customer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Customer'
        "404":
          description: Customer not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Memperbarui data customer
      tags:
      - customer
  /customers:
    get:
      consumes:
      - application/json
      description: Mengambil daftar semua customer dengan paginasi
      parameters:
      - description: Halaman
        in: query
        name: page
        type: integer
      - description: Jumlah item per halaman
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Customer'
            type: array
        "404":
          description: No data found
          schema:
            type: string
      summary: Mendapatkan daftar customer
      tags:
      - customer
  /login:
    post:
      consumes:
      - application/json
      description: Mengautentikasi pengguna dan menghasilkan token JWT jika berhasil
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: token JWT
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: User not found atau password salah
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Login pengguna
      tags:
      - auth
  /orders:
    get:
      consumes:
      - application/json
      description: Mengambil daftar semua pesanan dengan paginasi
      parameters:
      - description: Halaman
        in: query
        name: page
        type: integer
      - description: Jumlah item per halaman
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "404":
          description: No data found
          schema:
            type: string
      summary: Mendapatkan daftar pesanan
      tags:
      - order
    post:
      consumes:
      - application/json
      description: Menambahkan pesanan baru ke dalam database
      parameters:
      - description: Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid request payload atau status tidak valid
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Membuat pesanan baru
      tags:
      - order
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: Menghapus pesanan berdasarkan ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Order berhasil dihapus
          schema:
            type: string
        "404":
          description: Order not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Menghapus data pesanan
      tags:
      - order
    get:
      consumes:
      - application/json
      description: Mengambil informasi pesanan berdasarkan ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "404":
          description: Order not found
          schema:
            type: string
      summary: Mendapatkan detail pesanan
      tags:
      - order
    put:
      consumes:
      - application/json
      description: Memperbarui informasi pesanan yang sudah ada
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      - description: Order Data
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Invalid request payload
          schema:
            type: string
        "404":
          description: Order not found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Memperbarui data pesanan
      tags:
      - order
  /register:
    post:
      consumes:
      - application/json
      description: Membuat pengguna baru dengan menyimpan username dan password terenkripsi
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Registrasi pengguna baru
      tags:
      - auth
swagger: "2.0"
